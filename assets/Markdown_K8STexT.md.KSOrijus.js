import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.S-Qvb3wi.js";const g=JSON.parse('{"title":"K8S部署集群实例","description":"","frontmatter":{"title":"K8S部署集群实例"},"headers":[],"relativePath":"Markdown/K8STexT.md","filePath":"Markdown/K8STexT.md"}'),t={name:"Markdown/K8STexT.md"};function h(l,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[e(`<p>要在 Kubernetes 集群中将私有 <code>docker-nginx</code> 镜像部署到 <code>node1</code> 和 <code>node2</code> 节点，并通过 <code>master</code> 节点进行监控管理，需按以下步骤操作：</p><hr><h3 id="步骤-1-准备工作" tabindex="-1"><strong>步骤 1：准备工作</strong> <a class="header-anchor" href="#步骤-1-准备工作" aria-label="Permalink to &quot;**步骤 1：准备工作**&quot;">​</a></h3><h4 id="_1-1-确保集群节点状态正常" tabindex="-1">1.1 确保集群节点状态正常 <a class="header-anchor" href="#_1-1-确保集群节点状态正常" aria-label="Permalink to &quot;1.1 确保集群节点状态正常&quot;">​</a></h4><p>在 <strong>Master 节点</strong> 执行以下命令，确认所有节点处于 <code>Ready</code> 状态：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodes</span></span></code></pre></div><p>输出示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NAME     STATUS   ROLES           AGE   VERSION</span></span>
<span class="line"><span>master   Ready    control-plane   10d   v1.28.2</span></span>
<span class="line"><span>node1    Ready    &lt;none&gt;          10d   v1.28.2</span></span>
<span class="line"><span>node2    Ready    &lt;none&gt;          10d   v1.28.2</span></span></code></pre></div><h4 id="_1-2-为节点添加标签-可选" tabindex="-1">1.2 为节点添加标签（可选） <a class="header-anchor" href="#_1-2-为节点添加标签-可选" aria-label="Permalink to &quot;1.2 为节点添加标签（可选）&quot;">​</a></h4><p>为 <code>node1</code> 和 <code>node2</code> 添加标签，方便后续调度：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> label</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app=nginx</span></span></code></pre></div><hr><h3 id="步骤-2-配置私有镜像访问权限" tabindex="-1"><strong>步骤 2：配置私有镜像访问权限</strong> <a class="header-anchor" href="#步骤-2-配置私有镜像访问权限" aria-label="Permalink to &quot;**步骤 2：配置私有镜像访问权限**&quot;">​</a></h3><h4 id="_2-1-创建-docker-registry-secret" tabindex="-1">2.1 创建 Docker Registry Secret <a class="header-anchor" href="#_2-1-创建-docker-registry-secret" aria-label="Permalink to &quot;2.1 创建 Docker Registry Secret&quot;">​</a></h4><p>在 <strong>Master 节点</strong> 创建 Secret，用于从私有仓库拉取镜像：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-registry-secret</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-server=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">私有仓库地址</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-username=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">用户名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-password=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">密码</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-email=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">邮箱</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>示例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-registry-secret</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-server=harbor.example.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-username=admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-password=123456</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --docker-email=admin@example.com</span></span></code></pre></div><h4 id="_2-2-验证-secret" tabindex="-1">2.2 验证 Secret <a class="header-anchor" href="#_2-2-验证-secret" aria-label="Permalink to &quot;2.2 验证 Secret&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-registry-secret</span></span></code></pre></div><p>拓展：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">查看已配置的私有镜像访问权限</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secrets</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all-namespaces</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">查看Secret的详细信息</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> regcred</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">核心</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span></span></code></pre></div><hr><h3 id="步骤-3-部署应用" tabindex="-1"><strong>步骤 3：部署应用</strong> <a class="header-anchor" href="#步骤-3-部署应用" aria-label="Permalink to &quot;**步骤 3：部署应用**&quot;">​</a></h3><h4 id="_3-1-创建-deployment-配置文件" tabindex="-1">3.1 创建 Deployment 配置文件 <a class="header-anchor" href="#_3-1-创建-deployment-配置文件" aria-label="Permalink to &quot;3.1 创建 Deployment 配置文件&quot;">​</a></h4><p>编写 <code>nginx-deployment.yaml</code>，强制 Pod 调度到 <code>node1</code> 和 <code>node2</code>：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx-deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 每个节点一个副本（若需每个节点固定一个实例，改用 DaemonSet）</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      imagePullSecrets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-registry-secret</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 引用私有仓库的 Secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">harbor.example.com/your-project/docker-nginx:latest</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 私有镜像地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      affinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        nodeAffinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          requiredDuringSchedulingIgnoredDuringExecution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            nodeSelectorTerms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">matchExpressions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                    operator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">In</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                    values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 仅调度到带有 app=nginx 标签的节点</span></span></code></pre></div><h4 id="_3-2-应用配置" tabindex="-1">3.2 应用配置 <a class="header-anchor" href="#_3-2-应用配置" aria-label="Permalink to &quot;3.2 应用配置&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-deployment.yaml</span></span></code></pre></div><h4 id="_3-3-验证-pod-调度" tabindex="-1">3.3 验证 Pod 调度 <a class="header-anchor" href="#_3-3-验证-pod-调度" aria-label="Permalink to &quot;3.3 验证 Pod 调度&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pods</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wide</span></span></code></pre></div><p>输出示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NAME                                READY   STATUS    IP           NODE    AGE</span></span>
<span class="line"><span>nginx-deployment-5d5b5d7c6d-abc12   1/1     Running   10.244.1.2   node1   2m</span></span>
<span class="line"><span>nginx-deployment-5d5b5d7c6d-xyz89   1/1     Running   10.244.2.3   node2   2m</span></span></code></pre></div><hr><h3 id="步骤-4-暴露服务" tabindex="-1"><strong>步骤 4：暴露服务</strong> <a class="header-anchor" href="#步骤-4-暴露服务" aria-label="Permalink to &quot;**步骤 4：暴露服务**&quot;">​</a></h3><h4 id="_4-1-创建-service" tabindex="-1">4.1 创建 Service <a class="header-anchor" href="#_4-1-创建-service" aria-label="Permalink to &quot;4.1 创建 Service&quot;">​</a></h4><p>编写 <code>nginx-service.yaml</code>：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx-service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TCP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      targetPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ClusterIP</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 默认内部访问，如需外部访问可改为 NodePort 或 LoadBalancer</span></span></code></pre></div><p>应用配置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-service.yaml</span></span></code></pre></div><h4 id="_4-2-验证服务" tabindex="-1">4.2 验证服务 <a class="header-anchor" href="#_4-2-验证服务" aria-label="Permalink to &quot;4.2 验证服务&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-service</span></span></code></pre></div><p>输出示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NAME            TYPE        CLUSTER-IP     PORT(S)   AGE</span></span>
<span class="line"><span>nginx-service   ClusterIP   10.96.123.45   80/TCP    30s</span></span></code></pre></div><hr><h3 id="步骤-5-监控管理" tabindex="-1"><strong>步骤 5：监控管理</strong> <a class="header-anchor" href="#步骤-5-监控管理" aria-label="Permalink to &quot;**步骤 5：监控管理**&quot;">​</a></h3><h4 id="_5-1-部署监控组件-prometheus-grafana" tabindex="-1">5.1 部署监控组件（Prometheus + Grafana） <a class="header-anchor" href="#_5-1-部署监控组件-prometheus-grafana" aria-label="Permalink to &quot;5.1 部署监控组件（Prometheus + Grafana）&quot;">​</a></h4><p>在 <strong>Master 节点</strong> 使用 Helm 安装监控套件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prometheus-community</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://prometheus-community.github.io/helm-charts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prometheus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prometheus-community/kube-prometheus-stack</span></span></code></pre></div><h4 id="_5-2-访问-grafana-仪表板" tabindex="-1">5.2 访问 Grafana 仪表板 <a class="header-anchor" href="#_5-2-访问-grafana-仪表板" aria-label="Permalink to &quot;5.2 访问 Grafana 仪表板&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port-forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svc/prometheus-grafana</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3000:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span></span></code></pre></div><p>访问 <code>http://localhost:3000</code>，默认用户名为 <code>admin</code>，密码通过以下命令获取：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prometheus-grafana</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jsonpath=&quot;{.data.admin-password}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> base64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --decode</span></span></code></pre></div><h4 id="_5-3-配置监控面板" tabindex="-1">5.3 配置监控面板 <a class="header-anchor" href="#_5-3-配置监控面板" aria-label="Permalink to &quot;5.3 配置监控面板&quot;">​</a></h4><ul><li>在 Grafana 中导入 Kubernetes 监控仪表板（如 ID <code>3119</code>）。</li><li>监控指标包括 Pod CPU/内存使用率、网络流量等。</li></ul><hr><h3 id="步骤-6-验证与维护" tabindex="-1"><strong>步骤 6：验证与维护</strong> <a class="header-anchor" href="#步骤-6-验证与维护" aria-label="Permalink to &quot;**步骤 6：验证与维护**&quot;">​</a></h3><h4 id="_6-1-查看-pod-日志" tabindex="-1">6.1 查看 Pod 日志 <a class="header-anchor" href="#_6-1-查看-pod-日志" aria-label="Permalink to &quot;6.1 查看 Pod 日志&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pod-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h4 id="_6-2-扩缩容" tabindex="-1">6.2 扩缩容 <a class="header-anchor" href="#_6-2-扩缩容" aria-label="Permalink to &quot;6.2 扩缩容&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scale</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-deployment</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --replicas=3</span></span></code></pre></div><h4 id="_6-3-更新镜像" tabindex="-1">6.3 更新镜像 <a class="header-anchor" href="#_6-3-更新镜像" aria-label="Permalink to &quot;6.3 更新镜像&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment/nginx-deployment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx=harbor.example.com/your-project/docker-nginx:new-tag</span></span></code></pre></div><hr><h3 id="总结" tabindex="-1"><strong>总结</strong> <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;**总结**&quot;">​</a></h3><ul><li><strong>调度控制</strong>：通过 <code>nodeAffinity</code> 或 <code>nodeSelector</code> 限制 Pod 运行在 <code>node1</code> 和 <code>node2</code>。</li><li><strong>私有镜像</strong>：使用 <code>imagePullSecrets</code> 确保从私有仓库拉取镜像。</li><li><strong>监控方案</strong>：集成 Prometheus + Grafana 实现全面监控。</li><li><strong>维护建议</strong>：使用 <code>kubectl rollout</code> 管理更新，结合 Horizontal Pod Autoscaler（HPA）自动扩缩容。</li></ul><p>通过以上步骤，您已成功将私有镜像部署到指定节点，并通过 Master 节点实现了监控管理。</p>`,67)]))}const c=i(t,[["render",h]]);export{g as __pageData,c as default};
