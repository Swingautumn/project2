import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.CQUK54pW.js";const g=JSON.parse('{"title":"Nginx笔记","description":"","frontmatter":{},"headers":[],"relativePath":"Markdown/NginxNote.md","filePath":"Markdown/NginxNote.md"}'),l={name:"Markdown/NginxNote.md"};function e(h,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="nginx笔记" tabindex="-1">Nginx笔记 <a class="header-anchor" href="#nginx笔记" aria-label="Permalink to &quot;Nginx笔记&quot;">​</a></h1><h2 id="nginx核心架构模块" tabindex="-1">Nginx核心架构模块 <a class="header-anchor" href="#nginx核心架构模块" aria-label="Permalink to &quot;Nginx核心架构模块&quot;">​</a></h2><h3 id="master-worker模型" tabindex="-1">Master-Worker模型 <a class="header-anchor" href="#master-worker模型" aria-label="Permalink to &quot;Master-Worker模型&quot;">​</a></h3><ul><li><strong>Master进程</strong>：负责配置解析、信号处理和进程管理，是Nginx的“指挥官”。</li><li><strong>Worker进程</strong>：负责处理客户端请求，采用异步非阻塞模式，能高效处理大量请求，就像“士兵”一样冲锋陷阵。</li><li><strong>优势</strong>：单Worker可处理数千请求，资源消耗远低于Apache，是高并发场景下的“利器”。</li></ul><h3 id="热部署原理" tabindex="-1">热部署原理 <a class="header-anchor" href="#热部署原理" aria-label="Permalink to &quot;热部署原理&quot;">​</a></h3><ul><li><strong>步骤流程</strong>： <ul><li>发送<code>USR2</code>信号，启动新Master进程，就像开启一个“平行世界”。</li><li>新旧进程并存，新Worker处理新请求，确保服务不间断。</li><li>发送<code>WINCH</code>信号，让旧Worker优雅退出，就像“功成身退”。</li><li>发送<code>QUIT</code>信号，使旧Master完全退出，完成“新老交替”。</li></ul></li><li><strong>操作命令</strong>：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -USR2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 启动新进程</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -WINCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 关闭旧Worker</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -QUIT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 退出旧Master</span></span></code></pre></div></li></ul><h2 id="nginx核心功能模块" tabindex="-1">Nginx核心功能模块 <a class="header-anchor" href="#nginx核心功能模块" aria-label="Permalink to &quot;Nginx核心功能模块&quot;">​</a></h2><h3 id="代理与负载均衡" tabindex="-1">代理与负载均衡 <a class="header-anchor" href="#代理与负载均衡" aria-label="Permalink to &quot;代理与负载均衡&quot;">​</a></h3><ul><li><strong>正向代理</strong>：客户端显式配置代理服务器，就像客户端请了一个“保镖”，使用<code>proxy_pass</code>指令。</li><li><strong>反向代理</strong>：客户端无感知，统一入口，就像有一个“门卫”在分发请求，使用<code>upstream</code>和<code>server</code>指令。</li><li><strong>负载策略</strong>： <ul><li><strong>轮询</strong>：默认均分请求，公平公正。</li><li><strong>加权轮询</strong>：按权重分配流量，就像按“能力”分配任务，使用<code>weight</code>参数。</li><li><strong>IP哈希</strong>：同一IP固定服务器，确保同一用户请求被分配到同一服务器，使用<code>ip_hash</code>指令。</li><li><strong>最少连接</strong>：优先选连接数少的服务器，让“空闲”的服务器先干活，使用<code>least_conn</code>指令。</li></ul></li></ul><h3 id="动静分离" tabindex="-1">动静分离 <a class="header-anchor" href="#动静分离" aria-label="Permalink to &quot;动静分离&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 静态资源处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(jpg|css|js)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/static;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 浏览器缓存30天</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 动态请求处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://tomcat_cluster;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="日志管理" tabindex="-1">日志管理 <a class="header-anchor" href="#日志管理" aria-label="Permalink to &quot;日志管理&quot;">​</a></h3><ul><li><strong>访问统计命令</strong>：通过<code>awk</code>命令统计访问最多的URL，快速定位热门资源。<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $7}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n10</span></span></code></pre></div></li><li><strong>日志路径查找</strong>：使用<code>grep</code>命令查找日志路径，就像在文件中“寻宝”。<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;access_log&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/</span></span></code></pre></div></li></ul><h2 id="nginx运维与高可用模块" tabindex="-1">Nginx运维与高可用模块 <a class="header-anchor" href="#nginx运维与高可用模块" aria-label="Permalink to &quot;Nginx运维与高可用模块&quot;">​</a></h2><h3 id="高可用方案" tabindex="-1">高可用方案 <a class="header-anchor" href="#高可用方案" aria-label="Permalink to &quot;高可用方案&quot;">​</a></h3><ul><li><strong>主备容灾架构</strong>：通过虚拟IP实现主备切换，就像有一个“替身”，主Nginx故障时备Nginx立即接管。<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>客户端请求 → 虚拟IP (192.168.1.100)</span></span>
<span class="line"><span>                    ├─→ 主Nginx (正常时处理请求)</span></span>
<span class="line"><span>                    └─→ 备Nginx (主故障时接管)</span></span>
<span class="line"><span>主/备Nginx → 后端服务器组 (Web1, Web2, ...)</span></span></code></pre></div></li><li><strong>工具</strong>：Keepalived实现VIP漂移，切换时间小于1秒，就像“无缝切换”的魔术师。</li></ul><h3 id="运维命令速查" tabindex="-1">运维命令速查 <a class="header-anchor" href="#运维命令速查" aria-label="Permalink to &quot;运维命令速查&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>nginx -t</code></td><td>测试配置文件语法，确保配置无误。</td></tr><tr><td><code>nginx -s reload</code></td><td>热重载配置，不中断服务，实现“无缝更新”。</td></tr><tr><td><code>nginx -V</code></td><td>查看编译参数及模块，了解Nginx的“家底”。</td></tr><tr><td><code>tail -f logs/error.log</code></td><td>实时监控错误日志，就像“守望者”时刻关注服务器健康。</td></tr><tr><td><code>goaccess access.log</code></td><td>可视化日志分析，将日志数据转化为直观的图表。</td></tr></tbody></table><h3 id="安全控制" tabindex="-1">安全控制 <a class="header-anchor" href="#安全控制" aria-label="Permalink to &quot;安全控制&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># IP访问控制</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">allow </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">192.168.1.0/24;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许特定IP段访问</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">deny </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 禁止其他所有IP访问</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用户密码认证</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auth_basic </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Restricted Area&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提示信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auth_basic_user_file </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/etc/nginx/.htpasswd;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用户名密码文件</span></span></code></pre></div><h3 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h3><p><strong>限流配置</strong>：限制请求速率，防止服务器被“淹没”。</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit_req_zone </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$binary_remote_addr zone=perip:10m rate=10r/s;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每秒限制10请求</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    limit_req </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zone=perip burst=20;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 允许突发20个请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="https配置" tabindex="-1">HTTPS配置 <a class="header-anchor" href="#https配置" aria-label="Permalink to &quot;HTTPS配置&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/cert.pem;     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 证书文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/key.pem;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 私钥文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TLSv1.2 TLSv1.3;         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 协议版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="nginx范例模块" tabindex="-1">Nginx范例模块 <a class="header-anchor" href="#nginx范例模块" aria-label="Permalink to &quot;Nginx范例模块&quot;">​</a></h2><h3 id="vue项目部署" tabindex="-1">Vue项目部署 <a class="header-anchor" href="#vue项目部署" aria-label="Permalink to &quot;Vue项目部署&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/vue-project;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 项目根目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html;           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认首页</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 支持前端路由，让前端应用“自由飞翔”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="tomcat集群负载" tabindex="-1">Tomcat集群负载 <a class="header-anchor" href="#tomcat集群负载" aria-label="Permalink to &quot;Tomcat集群负载&quot;">​</a></h3><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tomcat_cluster </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    least_conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最少连接策略，让连接数“均匀分布”</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 10.0.0.1:8080 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 权重高的服务器承担更多请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server 10.0.0.2:8080; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    keepalive </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接复用，减少“握手”开销</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-label="Permalink to &quot;补充说明&quot;">​</a></h3><ul><li>热部署通过Master管理新旧Worker组实现零中断升级，就像“新老交替”的接力赛。</li><li>日志路径由<code>access_log</code>指令定义，统计访问推荐使用<code>awk</code>命令链或GoAccess工具，让日志分析变得“轻松愉快”。</li><li>注意源码安装与包管理安装的默认路径差异（<code>/usr/local/nginx/logs/</code> vs <code>/var/log/nginx/</code>），避免“找不到文件”的尴尬。</li></ul>`,32)]))}const c=i(l,[["render",e]]);export{g as __pageData,c as default};
