import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.CQUK54pW.js";const g=JSON.parse('{"title":"Nginx笔记","description":"","frontmatter":{"title":"Nginx笔记"},"headers":[],"relativePath":"Markdown/NginxNote.md","filePath":"Markdown/NginxNote.md"}'),h={name:"Markdown/NginxNote.md"};function l(e,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h3 id="nginx-核心知识点全解析" tabindex="-1">Nginx 核心知识点全解析 <a class="header-anchor" href="#nginx-核心知识点全解析" aria-label="Permalink to &quot;Nginx 核心知识点全解析&quot;">​</a></h3><p><strong>版本：2025.05.11</strong></p><hr><h3 id="一、核心架构" tabindex="-1">一、核心架构 <a class="header-anchor" href="#一、核心架构" aria-label="Permalink to &quot;一、核心架构&quot;">​</a></h3><h4 id="master-worker-模型" tabindex="-1"><strong>Master-Worker 模型</strong> <a class="header-anchor" href="#master-worker-模型" aria-label="Permalink to &quot;**Master-Worker 模型**&quot;">​</a></h4><ul><li><code>Master</code>：管理进程（配置解析/信号处理/进程管理）</li><li><code>Worker</code>：工作进程（处理请求，异步非阻塞模式）</li><li><strong>优势</strong>：单Worker处理数千请求，资源消耗远低于Apache</li></ul><h4 id="热部署原理" tabindex="-1"><strong>热部署原理</strong> <a class="header-anchor" href="#热部署原理" aria-label="Permalink to &quot;**热部署原理**&quot;">​</a></h4><ol><li>步骤流程：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 发送</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> USR2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 信号</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 启动新Master进程</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 新旧进程并存</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 新Worker处理新请求</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 发送</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WINCH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 信号</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 旧Worker优雅退出</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 发送</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> QUIT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 信号</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 旧Master完全退出</span></span></code></pre></div><ol start="2"><li>操作命令：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -USR2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 启动新进程</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -WINCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 关闭旧Worker</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -QUIT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 退出旧Master</span></span></code></pre></div><hr><h3 id="二、核心功能实现" tabindex="-1">二、核心功能实现 <a class="header-anchor" href="#二、核心功能实现" aria-label="Permalink to &quot;二、核心功能实现&quot;">​</a></h3><h4 id="_1-代理与负载均衡" tabindex="-1">1. 代理与负载均衡 <a class="header-anchor" href="#_1-代理与负载均衡" aria-label="Permalink to &quot;1. 代理与负载均衡&quot;">​</a></h4><table tabindex="0"><thead><tr><th><strong>类型</strong></th><th><strong>特点</strong></th><th><strong>配置指令</strong></th></tr></thead><tbody><tr><td>正向代理</td><td>客户端显式配置代理服务器</td><td><code>proxy_pass</code></td></tr><tr><td>反向代理</td><td>客户端无感知，统一入口</td><td><code>upstream</code> + <code>server</code></td></tr><tr><td><strong>负载策略</strong></td><td></td><td></td></tr><tr><td>轮询</td><td>默认均分请求</td><td>无需特殊指令</td></tr><tr><td>加权轮询</td><td>按权重分配流量</td><td><code>weight=3</code></td></tr><tr><td>IP哈希</td><td>同一IP固定服务器</td><td><code>ip_hash</code></td></tr><tr><td>最少连接</td><td>优先选连接数少的服务器</td><td><code>least_conn</code></td></tr></tbody></table><h4 id="_2-动静分离" tabindex="-1">2. 动静分离 <a class="header-anchor" href="#_2-动静分离" aria-label="Permalink to &quot;2. 动静分离&quot;">​</a></h4><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 静态资源处理（图片/CSS/JS）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~*</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> \\.(jpg|css|js)$ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/static; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    expires </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 浏览器缓存30天</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 动态请求处理（API/程序生成）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://tomcat_cluster;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_3-日志管理" tabindex="-1">3. 日志管理 <a class="header-anchor" href="#_3-日志管理" aria-label="Permalink to &quot;3. 日志管理&quot;">​</a></h4><p><strong>访问统计命令</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $7}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> access.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n10</span></span></code></pre></div><p><strong>日志路径查找</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;access_log&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看配置文件</span></span></code></pre></div><hr><h3 id="三、高级配置" tabindex="-1">三、高级配置 <a class="header-anchor" href="#三、高级配置" aria-label="Permalink to &quot;三、高级配置&quot;">​</a></h3><h4 id="_1-安全控制" tabindex="-1">1. 安全控制 <a class="header-anchor" href="#_1-安全控制" aria-label="Permalink to &quot;1. 安全控制&quot;">​</a></h4><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># IP访问控制</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">allow </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">192.168.1.0/24;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">deny </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用户密码认证</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auth_basic </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Restricted Area&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auth_basic_user_file </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/etc/nginx/.htpasswd;</span></span></code></pre></div><h4 id="_2-性能优化" tabindex="-1">2. 性能优化 <a class="header-anchor" href="#_2-性能优化" aria-label="Permalink to &quot;2. 性能优化&quot;">​</a></h4><p><strong>限流配置</strong>：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每秒限制10请求，允许突发20个</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit_req_zone </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$binary_remote_addr zone=perip:10m rate=10r/s;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    limit_req </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zone=perip burst=20;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_3-https-配置" tabindex="-1">3. HTTPS 配置 <a class="header-anchor" href="#_3-https-配置" aria-label="Permalink to &quot;3. HTTPS 配置&quot;">​</a></h4><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/cert.pem;     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 证书文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/key.pem;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 私钥文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TLSv1.2 TLSv1.3;         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 协议版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="四、高可用方案" tabindex="-1">四、高可用方案 <a class="header-anchor" href="#四、高可用方案" aria-label="Permalink to &quot;四、高可用方案&quot;">​</a></h3><p><strong>主备容灾架构</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>客户端请求 → 虚拟IP (192.168.1.100)  </span></span>
<span class="line"><span>                ├─→ 主Nginx (正常时处理请求)  </span></span>
<span class="line"><span>                └─→ 备Nginx (主故障时接管)  </span></span>
<span class="line"><span>主/备Nginx → 后端服务器组 (Web1, Web2, ...)</span></span></code></pre></div><p><strong>工具</strong>：Keepalived 实现 VIP 漂移，切换时间 &lt;1秒</p><hr><h3 id="五、运维命令速查" tabindex="-1">五、运维命令速查 <a class="header-anchor" href="#五、运维命令速查" aria-label="Permalink to &quot;五、运维命令速查&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>命令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td><code>nginx -t</code></td><td>测试配置文件语法</td></tr><tr><td><code>nginx -s reload</code></td><td>热重载配置（不中断服务）</td></tr><tr><td><code>nginx -V</code></td><td>查看编译参数及模块</td></tr><tr><td><code>tail -f logs/error.log</code></td><td>实时监控错误日志</td></tr><tr><td><code>goaccess access.log</code></td><td>可视化日志分析</td></tr></tbody></table><hr><h3 id="六、配置示例" tabindex="-1">六、配置示例 <a class="header-anchor" href="#六、配置示例" aria-label="Permalink to &quot;六、配置示例&quot;">​</a></h3><h4 id="vue-项目部署" tabindex="-1">Vue 项目部署 <a class="header-anchor" href="#vue-项目部署" aria-label="Permalink to &quot;Vue 项目部署&quot;">​</a></h4><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/vue-project;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 支持前端路由</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="tomcat-集群负载" tabindex="-1">Tomcat 集群负载 <a class="header-anchor" href="#tomcat-集群负载" aria-label="Permalink to &quot;Tomcat 集群负载&quot;">​</a></h4><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tomcat_cluster </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    least_conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最少连接策略</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 10.0.0.1:8080 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server 10.0.0.2:8080; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    keepalive </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接复用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-label="Permalink to &quot;补充说明&quot;">​</a></h3><p>热部署通过Master管理新旧Worker组实现零中断升级。日志路径由<code>access_log</code>指令定义，统计访问推荐<code>awk</code>命令链或GoAccess工具。注意源码安装与包管理安装的默认路径差异（<code>/usr/local/nginx/logs/</code> vs <code>/var/log/nginx/</code>）。</p><blockquote><p><strong>核心价值</strong>：Master-Worker架构 + 异步非阻塞模型支撑高并发，热部署与精细化负载策略保障服务连续性，是现代化Web架构基石。</p></blockquote>`,49)]))}const c=i(h,[["render",l]]);export{g as __pageData,c as default};
